# {{{ Unbind first
unbind-key C-b #no more C^b
unbind-key [
# }}}
set -g allow-rename off
set-window-option -g allow-rename off
set -g default-terminal "screen-256color"
set-option -g default-shell /bin/zsh

# {{{ Options
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g default-terminal "screen-256color"
# -- vi mode
set-window-option -g mode-keys vi
set-option -g status-keys vi
set-option -g status-keys vi
set-option -g repeat-time 1000
set-option -sg escape-time 0
# }}}

# {{{ prefix
# Semicolon is the only key that isn't bound by readline
# this creates a problem inside of ttys...
set-option -g prefix C-z
bind-key z send-prefix
# }}}

# Key bindings {{{
bind-key S source-file ~/.tmux.conf \; display-message "source-file done"

# All sorts of Vi-type bindings
# https://github.com/justone/dotfiles/blob/personal/.tmux.shared#L3
# VI for switching between
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key o last-window

bind C-w split-window -v "tmux list-windows | fzf | sed -E 's/:.*$//' | xargs tmux select-window -t"


# keybindings to make resizing easier
bind-key -r C-h resize-pane -L 5
bind-key -r C-j resize-pane -D 5
bind-key -r C-k resize-pane -U 5
bind-key -r C-l resize-pane -R 5
bind-key | resize-pane -Z \; display-message "Zoom zoom zoom"

# Pane movement
bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key B command-prompt -p "break pane to:"  "break-pane -t '%%'"
bind-key M-k move-pane -t ':+'
bind-key M-j move-pane -t ':-'

bind-key P command-prompt "select-pane -P \"bg=red\" -t '%%' "
bind-key D command-prompt "select-pane -P \"bg=black\" -t '%%' "

# Vi copy and paste in tmux
# http://joncairns.com/2013/06/copying-between-tmux-buffers-and-the-system-clipboard/
bind-key Escape copy-mode

# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
# }}}

# System Specific {{{
if-shell 'test "$(uname -s)" = "Darwin"' 'bind-key y run-shell "tmux show-buffer | pbcopy" \; display-message "Copied tmux buffer to system clipboard"'
if-shell 'test "$(uname -s)" = "Linux"' 'bind-key y run-shell "tmux show-buffer | xsel -pi" \; display-message "Copied tmux buffer to system clipboard"'

# only if this is the first level of inception do that fancy status bar
set -g status-fg white
set -g status-bg colour234
# set -g status-bg default #set for transparent background

# Custom status bar
# Powerline
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5
#set -g window-status-format "#[fg=white,bg=colour234] #I #W "
#set -g window-status-current-format "#[fg=colour234,bg=colour173]#[fg=colour16,bg=colour173,noreverse,bold] #I #W #[fg=colour173,bg=colour234,nobold]"

# }}}
#
# Smart pane switching with awareness of vim splits
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(emacs|view|n?vim?)(diff)?$"'
is_vim='echo "#{pane_current_command}" | grep -iqE "emacs"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#

#set-option -g history-limit 10000


run-shell /home/STRIKETECH/agupta/temp/tmux-resurrect/resurrect.tmux
